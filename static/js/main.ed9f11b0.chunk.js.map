{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","store/index.js","index.js"],"names":["useHttp","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","filters","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","name","reducers","heroCreated","state","action","addOne","payload","heroDeleted","removeOne","heroFiltered","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","filteredHeroesSelector","createSelector","filter","heroes","item","element","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","onDeleted","className","src","alt","style","type","onClick","aria-label","Spinner","role","HeroesList","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","useCallback","id","then","console","log","catch","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","HeroesFilters","onSetFilter","App","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAAaA,EAAU,WAmBnB,MAAO,CAACC,QAjBK,uCAAG,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,CAAC,eAAgB,oBAApE,kBAGeC,MAAML,EAAK,CAACE,SAAQC,OAAMC,YAHzC,WAGFE,EAHE,QAKMC,GALN,sBAME,IAAIC,MAAJ,0BAA6BR,EAA7B,qBAA6CM,EAASG,SANxD,wBASWH,EAASI,OATpB,eASFC,EATE,yBAWDA,GAXC,uGAAH,wD,8BCCXC,EAAgBC,cAEhBC,EAAeF,EAAcG,gBAAgB,CAC/CC,oBAAqB,OACrBC,QAAS,QAGAC,EAAcC,YACvB,sBACA,WAEI,OAAOpB,EADWD,IAAXC,SACQ,mCAIjBqB,EAAcC,YAAY,CAC5BC,KAAM,UACNR,eACAS,SAAU,CACNC,YAAa,SAACC,EAAOC,GACTd,EAAce,OAAOF,EAAOC,EAAOE,UAE/CC,YAAa,SAACJ,EAAOC,GACTd,EAAckB,UAAUL,EAAOC,EAAOE,UAElDG,aAAc,SAACN,EAAOC,GACVD,EAAMR,QAAUS,EAAOE,UAGvCI,cAAe,SAACC,GACZA,EACKC,QAAQhB,EAAYiB,SAAS,SAAAV,GAAUA,EAAMT,oBAAsB,aACnEkB,QAAQhB,EAAYkB,WAAW,SAACX,EAAOC,GACpCD,EAAMT,oBAAsB,OAC5BJ,EAAcyB,OAAOZ,EAAOC,EAAOE,YAEtCM,QAAQhB,EAAYoB,UAAU,SAAAb,GAC3BA,EAAMT,oBAAsB,WAE/BuB,gBAAe,kBAIrBC,EAAoBpB,EAApBoB,QAEQC,EAFYrB,EAAXqB,QAITC,EAAa9B,EAAc+B,cAAa,SAAAlB,GAAK,OAAIA,KAAjDiB,UAEME,EAAyBC,aAClC,SAACpB,GAAD,OAAWA,EAAMR,UACjByB,GACA,SAACI,EAAQC,GACL,MAAe,QAAXD,EACOC,EAEAA,EAAOD,QAAO,SAAAE,GAAI,OAAIA,EAAKC,UAAYH,QAStDtB,GAGAgB,EANAU,eAMAV,EALAW,cAKAX,EAJAY,oBAIAZ,EAHAhB,aACAK,EAEAW,EAFAX,YACAE,EACAS,EADAT,a,OC9BWsB,EAvCQ,SAAC,GAA6C,IAC7DC,EADiBhC,EAA2C,EAA3CA,KAAMiC,EAAqC,EAArCA,YAAaN,EAAwB,EAAxBA,QAASO,EAAe,EAAfA,UAGjD,OAAQP,GACJ,IAAK,OACDK,EAAmB,wBACnB,MACJ,IAAK,QACDA,EAAmB,yBACnB,MACJ,IAAK,OACDA,EAAmB,yBACnB,MACJ,IAAK,QACDA,EAAmB,2BACnB,MACJ,QACIA,EAAmB,yBAG3B,OACI,qBACIG,UAAS,kDAA6CH,GAD1D,UAEI,qBAAKI,IAAI,6EACJD,UAAU,0BACVE,IAAI,eACJC,MAAO,CAAC,UAAa,WAC1B,sBAAKH,UAAU,YAAf,UAEI,oBAAIA,UAAU,aAAd,SAA4BnC,IAC5B,mBAAGmC,UAAU,YAAb,SAA0BF,OAE9B,sBAAME,UAAU,wFAAhB,SACI,wBAAQI,KAAK,SAASJ,UAAU,sBAAsBK,QAASN,EAAWO,aAAW,gBCzBtFC,EARC,WACZ,OACI,qBAAKP,UAAU,8BAA8BQ,KAAK,SAAlD,SACI,sBAAMR,UAAU,kBAAhB,2BCwEGS,G,MA3DI,WAEf,IAAMC,EAAiBC,YAAYxB,GAC7B5B,EAAsBoD,aAAY,SAAA3C,GAAK,OAAIA,EAAMT,uBACjDqD,EAAWC,cACVvE,EAAWD,IAAXC,QAEPwE,qBAAU,WACNF,EAASnD,OAEV,IAEH,IAAMsC,EAAYgB,uBAAY,SAACC,GAE3B1E,EAAQ,gCAAD,OAAiC0E,GAAM,UACzCC,MAAK,SAAA/D,GAAI,OAAIgE,QAAQC,IAAIjE,EAAM,cAC/B+D,KAAKL,EAASxC,EAAY4C,KAC1BI,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAE/B,CAAC/E,IAGJ,GAA4B,YAAxBiB,EACA,OAAO,cAAC,EAAD,IACJ,GAA4B,UAAxBA,EACP,OAAO,oBAAIyC,UAAU,mBAAd,mGAGX,IAA0BsB,EAuBpBC,EAtBiB,KADGD,EAuBQZ,GAtBtBc,OAEA,cAACC,EAAA,EAAD,CACIC,QAAS,EACTC,WAAW,OAFf,SAGI,oBAAI3B,UAAU,mBAAd,gGAKLsB,EAAIM,KAAI,YAAqB,IAAnBZ,EAAkB,EAAlBA,GAAOa,EAAW,sBAC/B,OACI,cAACJ,EAAA,EAAD,CAEIC,QAAS,IACTC,WAAW,OAHf,SAII,cAAC,EAAD,2BAAqBE,GAArB,IAA4B9B,UAAW,kBAAMA,EAAUiB,QAHlDA,MAUrB,OACI,cAACc,EAAA,EAAD,CAAiBC,UAAU,KAA3B,SACKR,M,gBCgCES,EAtFO,WAAO,IAAD,EAEQC,mBAAS,IAFjB,mBAEjBC,EAFiB,KAEPC,EAFO,OAGUF,mBAAS,IAHnB,mBAGjBG,EAHiB,KAGNC,EAHM,OAIcJ,mBAAS,IAJvB,mBAIjBK,EAJiB,KAIJC,EAJI,KAMlB3B,EAAWC,cAGVvE,EAAWD,IAAXC,QA2BP,OACI,uBAAM0D,UAAU,+BAA+BwC,SA1B3B,SAACC,GACrBA,EAAEC,iBAIF,IAAMC,EAAU,CACZ3B,GAAI4B,cACJ/E,KAAMqE,EACNpC,YAAasC,EACb5C,QAAS8C,GAKbhG,EAAQ,+BAAgC,OAAQuG,KAAKC,UAAUH,IAC1D1B,MAAK,SAAA8B,GAAG,OAAI7B,QAAQC,IAAI4B,EAAK,kGAC7B9B,KAAKL,EAAS7C,EAAY4E,KAC1BvB,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAG9Bc,EAAY,IACZE,EAAa,IACbE,EAAe,KAIf,UACI,sBAAKvC,UAAU,OAAf,UACI,uBAAOgD,QAAQ,OAAOhD,UAAU,kBAAhC,oGACA,uBACIiD,UAAQ,EACR7C,KAAK,OACLvC,KAAK,OACLmC,UAAU,eACVgB,GAAG,OACHkC,YAAY,8EACZC,MAAOjB,EACPkB,SAAU,SAAAX,GAAC,OAAIN,EAAYM,EAAEY,OAAOF,aAG5C,sBAAKnD,UAAU,OAAf,UACI,uBAAOgD,QAAQ,OAAOhD,UAAU,kBAAhC,8DACA,0BACIiD,UAAQ,EACRpF,KAAK,OACLmC,UAAU,eACVgB,GAAG,OACHkC,YAAY,sDACZ/C,MAAO,CAAC,OAAU,SAClBgD,MAAOf,EACPgB,SAAU,SAAAX,GAAC,OAAIJ,EAAaI,EAAEY,OAAOF,aAG7C,sBAAKnD,UAAU,OAAf,UACI,uBAAOgD,QAAQ,UAAUhD,UAAU,aAAnC,kIACA,yBACIiD,UAAQ,EACRjD,UAAU,cACVgB,GAAG,UACHnD,KAAK,UACLsF,MAAOb,EACPc,SAAU,SAAAX,GAAC,OAAIF,EAAeE,EAAEY,OAAOF,QAN3C,UAOI,2IACA,wBAAQA,MAAM,OAAd,4CACA,wBAAQA,MAAM,QAAd,sCACA,wBAAQA,MAAM,OAAd,4CACA,wBAAQA,MAAM,QAAd,kDAIR,wBAAQ/C,KAAK,SAASJ,UAAU,kBAAhC,4DCxDGsD,EA9BO,WAElB,IAAM1C,EAAWC,cACVvE,EAAWD,IAAXC,QAEDiH,EAAcxC,uBAAY,SAAC1B,GAC7B/C,EAAQ,gCACH2E,KAAKL,EAAStC,EAAae,KAC3B+B,OAAM,kBAAMF,QAAQC,IAAI,kBAE9B,CAAC7E,IAIJ,OACI,qBAAK0D,UAAU,sBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,YAAb,+LACA,sBAAKA,UAAU,YAAf,UACI,wBAAQA,UAAU,8BAA8BK,QAAS,kBAAMkD,EAAY,QAA3E,gCACA,wBAAQvD,UAAU,iBAAiBK,QAAS,kBAAMkD,EAAY,SAA9D,4CACA,wBAAQvD,UAAU,kBAAkBK,QAAS,kBAAMkD,EAAY,UAA/D,sCACA,wBAAQvD,UAAU,kBAAkBK,QAAS,kBAAMkD,EAAY,SAA/D,4CACA,wBAAQvD,UAAU,oBAAqBK,QAAS,kBAAMkD,EAAY,UAAlE,qDCfLC,G,MAdH,WACR,OACI,sBAAMxD,UAAU,MAAhB,SACI,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,uBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,cCTdyD,EAAmB,kBAAM,SAACC,GAAD,OAAU,SAACzF,GACtC,OACWyF,EADW,kBAAXzF,EACK,CACRmC,KAAMnC,GAGFA,MAiBD0F,EAPDC,YAAe,CACzB5E,QAASA,EACT6E,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,OAAON,IAClEO,UAAUC,I,MCddC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJU,SAASC,eAAe,W","file":"static/js/main.ed9f11b0.chunk.js","sourcesContent":["export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    };\n\n    return {request}\n}","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from '../../hooks/http.hook';\r\n\r\nconst heroesAdapter = createEntityAdapter();\r\n\r\nconst initialState = heroesAdapter.getInitialState({\r\n    heroesLoadingStatus: 'idle',\r\n    filters: 'all'\r\n});\r\n\r\nexport const fetchHeroes = createAsyncThunk(\r\n    'heroes/fetchHeroes',\r\n    () => {\r\n        const {request} = useHttp();\r\n        return request(\"http://localhost:3001/heroes\");\r\n    }\r\n);\r\n\r\nconst heroesSlice = createSlice({\r\n    name: 'reducer',\r\n    initialState,\r\n    reducers: {\r\n        heroCreated: (state, action) => {\r\n                    heroesAdapter.addOne(state, action.payload);\r\n                },\r\n        heroDeleted: (state, action) => {\r\n                    heroesAdapter.removeOne(state, action.payload);\r\n                },\r\n        heroFiltered: (state, action) => {\r\n                    state.filters = action.payload;\r\n                }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchHeroes.pending, state => {state.heroesLoadingStatus = 'loading'})\r\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n                state.heroesLoadingStatus = 'idle';\r\n                heroesAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchHeroes.rejected, state => {\r\n                state.heroesLoadingStatus = 'error';\r\n            })\r\n            .addDefaultCase(() => {})\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = heroesSlice;\r\n\r\nexport default reducer;\r\n\r\nconst {selectAll} = heroesAdapter.getSelectors(state => state)\r\n\r\nexport const filteredHeroesSelector = createSelector(\r\n    (state) => state.filters,\r\n    selectAll,\r\n    (filter, heroes) => {\r\n        if (filter === 'all') {\r\n            return heroes;\r\n        } else {\r\n            return heroes.filter(item => item.element === filter);\r\n        }\r\n    }\r\n);\r\n\r\nexport const {\r\n    heroesFetching,\r\n    heroesFetched,\r\n    heroesFetchingError,\r\n    heroCreated,\r\n    heroDeleted,\r\n    heroFiltered\r\n} = actions;","\nconst HeroesListItem = ({name, description, element, onDeleted}) => {\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" onClick={onDeleted} aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport {createSelector} from '@reduxjs/toolkit';\n\nimport { heroDeleted, fetchHeroes, filteredHeroesSelector } from './heroesSlice';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\n// Задача для этого компонента:\n// При клике на \"крестик\" идет удаление персонажа из общего состояния\n// Усложненная задача:\n// Удаление идет и с json файла при помощи метода DELETE\n\nconst HeroesList = () => {\n\n    const filteredHeroes = useSelector(filteredHeroesSelector);\n    const heroesLoadingStatus = useSelector(state => state.heroesLoadingStatus);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchHeroes());\n        // eslint-disable-next-line\n    }, []);\n\n    const onDeleted = useCallback((id) => {\n        // Удаление персонажа по его id\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n            .then(data => console.log(data, 'Deleted'))\n            .then(dispatch(heroDeleted(id)))\n            .catch(err => console.log(err));\n        // eslint-disable-next-line  \n    }, [request]);\n    \n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDeleted={() => onDeleted(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","import { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport {useHttp} from '../../hooks/http.hook';\nimport { useDispatch } from 'react-redux';\nimport { heroCreated } from '../heroesList/heroesSlice';\n\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nconst HeroesAddForm = () => {\n\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const dispatch = useDispatch();\n\n\n    const {request} = useHttp();\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        // Можно сделать и одинаковые названия состояний,\n        // хотел показать вам чуть нагляднее\n        // Генерация id через библиотеку\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        // Отправляем данные на сервер в формате JSON\n        // ТОЛЬКО если запрос успешен - отправляем персонажа в store\n        request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n            .then(res => console.log(res, 'Отправка успешна'))\n            .then(dispatch(heroCreated(newHero)))\n            .catch(err => console.log(err));\n\n        // Очищаем форму после отправки\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={e => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={e => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={e => setHeroElement(e.target.value)}>\n                    <option >Я владею элементом...</option>\n                    <option value=\"fire\">Огонь</option>\n                    <option value=\"water\">Вода</option>\n                    <option value=\"wind\">Ветер</option>\n                    <option value=\"earth\">Земля</option>\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { heroFiltered } from '../heroesList/heroesSlice';\nimport {useCallback} from 'react'\nimport { useDispatch } from 'react-redux';\nimport {useHttp} from '../../hooks/http.hook';\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\n\n\nconst HeroesFilters = () => {\n\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    const onSetFilter = useCallback((filter) => {\n        request(\"http://localhost:3001/heroes\")\n            .then(dispatch(heroFiltered(filter)))\n            .catch(() => console.log('this shit'))\n        // dispatch(heroFiltered(filter))\n    }, [request]);\n\n\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    <button className=\"btn btn-outline-dark active\" onClick={() => onSetFilter('all')}>Все</button>\n                    <button className=\"btn btn-danger\" onClick={() => onSetFilter('fire')}>Огонь</button>\n                    <button className=\"btn btn-primary\" onClick={() => onSetFilter('water')}>Вода</button>\n                    <button className=\"btn btn-success\" onClick={() => onSetFilter('wind')}>Ветер</button>\n                    <button className=\"btn btn-secondary\"  onClick={() => onSetFilter('earth')}>Земля</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\n// import reducer from '../reducers';\nimport reducer from '../components/heroesList/heroesSlice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action);\n}\n\n// const store = createStore(\n//                     reducer,\n//                     compose(\n//                             applyMiddleware(ReduxThunk, stringMiddleware),\n//                             window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n//                     );\n\nconst store = configureStore({\n    reducer: reducer,\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n    devTools: process.env.NODE_ENV !== 'production',\n})\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}